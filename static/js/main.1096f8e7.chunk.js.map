{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactList","contacts","OnDeleteContact","className","s","contactList","map","id","name","number","type","onClick","button","propType","PropTypes","arrayOf","shape","isRequired","string","func","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","label","input","onChange","React","Component","Filter","App","filter","deleteContacts","contactId","prevState","contact","addContact","shortid","generate","find","toLowerCase","alert","changeFilter","currentTarget","visibleContacts","includes","localStorage","getItem","parsedContacts","JSON","parse","PrevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1096f8e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__z4UVP\",\"label\":\"Filter_label__3vZEE\",\"input\":\"Filter_input__3oTYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2mtsl\",\"name\":\"ContactList_name__38cPu\",\"number\":\"ContactList_number__3vunY\",\"button\":\"ContactList_button__3xIsh\"};","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, OnDeleteContact }) => (\r\n    <ul className={s.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li className={s.contacts} key={id}>\r\n                <p className={s.name}>{name}:</p>\r\n                <p className={s.number}>{number}</p>\r\n                <button type='button' onClick={() => OnDeleteContact(id)} className={s.button}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propType = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n    OnDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n     name: '',\r\n     number: ''\r\n    }\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState( {[name]: value,})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onSubmit({ ...this.state })\r\n\r\n        this.setState({ name: '', number: '' });\r\n     }\r\n\r\nrender() {\r\n    return (\r\n        <form onSubmit={this.handleSubmit}>\r\n            <label className={s.label}>Name\r\n                <input className={s.input}\r\n                    type='text'\r\n                    name='name'\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}> \r\n                </input>\r\n            </label>\r\n            <label className={s.label}>Number\r\n                <input className={s.input}\r\n                    type='text'\r\n                    name='number'\r\n                    value={this.state.number} onChange={this.handleChange}> \r\n                </input>\r\n            </label>\r\n            <button className={s.button} type='submit'>Add contact</button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>Find contacts by name\r\n        <input className={s.input} type='text' value={value} onChange={onChange}></input>\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport shortid from 'shortid';\nimport Filter from './components/Filter/Filter';\n\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n     \n    filter: ''\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(PrevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n    \n  }\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n\n addContact = ({ name, number }) => {\n   \n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (contacts.find( contact => contact.name.toLowerCase() === name.toLowerCase(),)) {\n      alert(`${name} is already in contacts.`);\n    \n    } else {\n      this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n  \n\n  changeFilter = event => {\n    this.setState({filter: event.currentTarget.value})\n  }\n    \n    \n visibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n\n  render() {\n    const { filter } = this.state;\n    \n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <Filter value={filter} onChange={this.changeFilter}/>\n         <h2>Contacts</h2>\n        <ContactList contacts={this.visibleContacts()} OnDeleteContact={this.deleteContacts}/>\n   \n    </div>\n    )\n    \n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1uMIK\",\"input\":\"ContactForm_input__2GcVY\",\"button\":\"ContactForm_button__2Mvj6\"};"],"sourceRoot":""}